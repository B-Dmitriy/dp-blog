{
  "compilerOptions": {
    // Директория, в которую компилятор будет помещать JS bundle
    "outDir": "./dist/",
    // TSC будеть подсвечивать неявное присваивание any, обойти можно присвоив явно
    "noImplicitAny": true,
    // Задаём разрешённые импорты (lazy - появился позже ES6, поэтому пишем ESNext)
    "module": "ESNext",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    // Разрешить JSX (react - ужно импортить в файл, react-jsx - можно не импортить react в файлы)
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "allowJs": true,
    // Стратегия для импорта модулей (При этом classic в 99% не будет использоваться, так как это legacy.)
    "moduleResolution": "node",
    // Для абсолютного импорта
    "baseUrl": ".",
    "paths": {
      // Начало пути для абсолютного импорта
      "*": [
        "./src/*"
      ]
    },
    // Позволяет работать с пакетами, которые используют common js
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет default import, автоматически создавать их
    "allowSyntheticDefaultImports": true
  },
  // Если какая-лиьо библиотека не может работать с современными модулями,
  // ей можно присвоить отдельные compilerOptions
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "./config/jest/setupTests.ts",
    "./src/**/*.ts",
    "./src/**/*.tsx"
  ]
}
